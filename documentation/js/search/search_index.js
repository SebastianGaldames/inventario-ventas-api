var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.008,1,2.138]],["body/controllers/AppController.html",[0,1.579,1,3.348,2,1.245,3,0.342,4,0.297,5,0.297,6,3.386,7,0.489,8,1.703,9,4.959,10,1.564,11,0.029,12,0.597,13,4.035,14,1.343,15,1.161,16,0.757,17,0.778,18,3.027,19,3.386,20,0.342,21,0.05,22,2.173,23,1.992,24,1.245,25,4.035,26,0.023,27,0.023]],["title/modules/AppModule.html",[28,1.008,29,2.138]],["body/modules/AppModule.html",[1,2.679,2,1.047,3,0.19,4,0.165,5,0.165,11,0.029,12,0.331,16,0.853,17,0.432,18,2.782,19,1.879,20,0.19,21,0.028,24,0.691,26,0.015,27,0.015,28,1.264,29,4.039,30,0.939,31,0.939,32,1.105,33,1.105,34,0.939,35,2.021,36,1.105,37,1.879,38,1.879,39,1.879,40,3.053,41,3.053,42,3.053,43,3.053,44,2.782,45,1.674,46,1.105,47,1.017,48,2.239,49,1.827,50,2.239,51,2.239,52,2.51,53,1.541,54,2.239,55,1.879,56,3.392,57,2.847,58,2.239,59,1.879,60,3.392,61,2.239,62,3.392,63,1.324,64,0.641,65,2.847,66,1.642,67,1.206,68,2.488,69,4.095,70,2.239,71,2.239,72,1.879,73,2.239,74,2.239,75,2.239,76,2.239,77,1.879,78,2.239,79,2.239,80,2.239,81,2.239,82,2.239,83,2.239,84,1.324,85,2.239,86,1.206,87,2.239,88,1.879,89,2.239,90,2.239,91,0.868,92,4.095,93,2.239,94,1.206,95,1.105,96,2.239,97,2.239,98,3.392,99,1.879]],["title/injectables/AppService.html",[18,1.76,100,1.008]],["body/injectables/AppService.html",[3,0.361,4,0.313,5,0.313,7,0.516,8,1.762,9,5.057,11,0.029,12,0.63,14,1.418,15,1.202,16,0.63,17,0.822,18,2.852,20,0.361,21,0.053,24,1.315,26,0.023,27,0.023,100,1.634,101,2.103,102,3.575,103,4.26,104,4.26,105,4.26]],["title/controllers/AuthController.html",[0,1.008,106,2.138]],["body/controllers/AuthController.html",[0,1.121,2,1.121,3,0.308,4,0.267,5,0.267,7,0.44,8,1.592,10,1.409,11,0.029,12,0.537,14,1.209,16,0.79,17,0.701,20,0.308,21,0.045,22,1.957,23,1.793,24,1.121,26,0.021,27,0.021,106,3.129,107,3.05,108,2.148,109,3.634,110,2.638,111,4.013,112,3.05,113,3.582,114,4.782,115,3.634,116,1.409,117,0.644,118,0.644,119,1.209,120,3.05,121,2.148,122,2.148,123,2.879,124,3.05,125,3.05,126,3.634,127,3.634,128,3.634]],["title/modules/AuthModule.html",[28,1.008,40,1.931]],["body/modules/AuthModule.html",[2,1.322,3,0.262,4,0.227,5,0.227,11,0.029,16,0.854,17,0.595,20,0.262,21,0.038,26,0.019,27,0.019,28,1.518,30,1.294,31,1.294,32,1.523,33,1.523,34,1.294,35,2.427,36,1.523,40,3.569,44,3.11,45,2.114,46,1.523,47,1.402,49,2.649,65,3.594,66,2.263,72,2.59,106,3.218,110,1.523,123,3.11,124,2.59,129,2.59,130,3.086,131,2.59,132,3.086,133,3.086,134,3.086,135,2.263,136,5.311,137,3.086,138,3.086,139,3.086,140,3.086,141,3.086,142,3.086,143,3.086,144,3.086,145,3.086,146,3.086,147,3.086]],["title/injectables/AuthService.html",[100,1.008,123,1.76]],["body/injectables/AuthService.html",[3,0.177,4,0.154,5,0.154,7,0.253,8,1.071,11,0.029,12,0.476,14,0.695,16,0.704,17,0.403,20,0.177,21,0.026,23,1.588,24,0.645,26,0.014,27,0.014,52,1.782,53,0.949,57,3.698,59,1.753,67,2.113,77,4.218,86,1.125,91,1.708,94,1.732,95,1.588,99,2.7,100,0.993,101,1.031,110,1.936,111,3.698,112,2.7,113,2.813,116,1.247,117,0.695,118,0.57,119,1.071,120,1.753,123,1.732,125,1.753,135,1.532,148,1.753,149,1.902,150,2.089,151,2.481,152,5.236,153,2.089,154,2.089,155,3.217,156,3.231,157,2.883,158,3.217,159,3.217,160,3.923,161,3.923,162,4.758,163,3.217,164,3.217,165,3.217,166,2.089,167,2.089,168,1.753,169,1.532,170,1.902,171,2.089,172,2.089,173,2.089,174,2.089,175,1.235,176,1.125,177,2.319,178,1.936,179,1.902,180,2.089,181,3.217,182,3.217,183,2.089,184,1.532,185,2.089,186,1.753,187,2.089,188,2.089,189,3.217,190,2.089,191,2.089,192,2.089,193,3.217,194,1.902,195,4.758,196,2.089,197,3.217,198,1.753,199,3.217,200,3.217,201,2.7,202,3.217,203,2.089,204,2.089,205,1.235,206,2.089,207,2.089,208,1.753]],["title/controllers/CategoriesController.html",[0,1.008,209,2.138]],["body/controllers/CategoriesController.html",[0,1.016,2,1.016,3,0.279,4,0.242,5,0.242,7,0.399,8,1.49,10,1.735,11,0.029,12,0.662,14,1.49,15,1.154,16,0.752,17,0.635,20,0.279,21,0.041,22,1.773,23,1.625,24,1.381,26,0.02,27,0.02,108,1.946,116,1.735,117,0.793,118,0.793,119,1.49,121,3.007,122,1.946,209,2.929,210,2.763,211,3.292,212,2.033,213,2.033,214,2.763,215,3.481,216,3.292,217,1.495,218,2.929,219,3.292,220,2.033,221,1.495,222,2.739,223,2.763,224,1.495,225,2.763,226,3.292,227,2.154,228,3.292,229,2.154,230,3.292]],["title/modules/CategoriesModule.html",[28,1.008,41,1.931]],["body/modules/CategoriesModule.html",[2,1.439,3,0.296,4,0.257,5,0.257,11,0.029,16,0.862,17,0.675,20,0.296,21,0.043,26,0.021,27,0.021,28,1.619,30,1.466,31,1.466,32,1.726,33,1.726,34,1.466,35,2.589,36,1.726,41,3.543,45,2.301,46,1.726,47,1.589,49,1.884,63,2.068,64,1.001,117,0.62,209,3.432,222,3.228,223,2.935,231,2.935,232,2.935,233,3.497,234,3.497,235,1.884,236,3.051,237,2.935,238,2.288,239,3.497,240,1.589]],["title/injectables/CategoriesService.html",[100,1.008,222,1.76]],["body/injectables/CategoriesService.html",[3,0.208,4,0.18,5,0.18,7,0.297,8,1.21,11,0.029,12,0.64,14,1.21,15,0.982,16,0.755,17,0.474,20,0.208,21,0.03,24,1.122,26,0.016,27,0.016,52,2.172,53,2.172,64,0.702,91,1.409,94,1.322,95,1.794,100,1.122,101,1.212,110,2.638,116,1.677,117,0.767,118,0.767,119,1.44,149,2.148,170,1.451,175,2.148,176,1.957,179,1.451,205,2.148,212,1.651,213,1.651,214,3.05,215,3.16,217,1.651,220,2.428,221,1.651,222,1.957,224,1.115,225,2.06,235,2.576,237,2.06,241,2.06,242,2.455,243,3.129,244,2.455,245,3.634,246,2.455,247,2.378,248,4.014,249,3.05,250,4.165,251,1.651,252,2.665,253,3.129,254,2.455,255,2.378,256,1.606,257,1.606,258,1.029,259,2.455,260,2.455,261,2.455,262,2.455,263,2.455,264,2.455,265,1.606]],["title/classes/Category.html",[21,0.04,235,1.76]],["body/classes/Category.html",[3,0.307,4,0.266,5,0.266,7,0.438,10,1.403,11,0.029,12,0.535,15,1.082,16,0.705,20,0.404,21,0.045,26,0.021,27,0.021,52,2.166,53,1.643,64,1.035,67,1.949,84,3.484,86,1.949,91,1.403,117,0.945,118,0.641,235,2.568,236,2.367,240,2.166,250,3.497,258,1.517,266,1.403,267,2.653,268,1.712,269,2.367,270,4.002,271,3.618,272,3.12,273,2.367,274,3.12,275,2.367,276,2.367,277,2.367,278,2.653,279,3.036,280,2.367,281,3.036]],["title/classes/CreateCategoryDto.html",[21,0.04,215,1.931]],["body/classes/CreateCategoryDto.html",[3,0.38,4,0.33,5,0.33,7,0.543,11,0.028,12,0.664,15,1.241,20,0.38,21,0.055,26,0.024,27,0.024,117,1.045,118,0.795,215,3.232,266,1.74,268,1.963,282,4.588,283,3.766,284,4.488]],["title/classes/CreateProductDto.html",[21,0.04,285,1.931]],["body/classes/CreateProductDto.html",[3,0.311,4,0.269,5,0.269,7,0.444,11,0.028,12,0.875,15,1.293,20,0.311,21,0.045,26,0.021,27,0.021,117,0.951,118,1.048,119,1.601,251,2.438,266,1.421,268,1.727,285,2.843,286,5.097,287,3.076,288,5.368,289,4.505,290,4.505,291,3.974,292,3.665,293,3.665,294,3.665,295,3.665,296,3.665]],["title/classes/CreateSaleDto.html",[21,0.04,297,1.931]],["body/classes/CreateSaleDto.html",[3,0.328,4,0.284,5,0.284,7,0.468,11,0.028,12,0.86,20,0.328,21,0.048,26,0.022,27,0.022,118,1.031,266,1.5,268,1.788,291,4.155,297,2.944,298,5.052,299,3.246,300,4.623,301,4.623,302,4.623,303,4.623,304,3.868,305,3.868,306,3.868,307,3.868]],["title/classes/CreateUserDto.html",[21,0.04,308,1.931]],["body/classes/CreateUserDto.html",[3,0.344,4,0.298,5,0.298,7,0.491,11,0.028,12,0.833,15,1.416,20,0.344,21,0.05,26,0.023,27,0.023,117,0.998,118,0.998,177,3.329,266,1.572,268,1.843,308,3.034,309,4.968,310,3.403,311,3.685,312,4.054,313,4.054,314,4.054]],["title/classes/LoginDto.html",[21,0.04,113,1.931]],["body/classes/LoginDto.html",[3,0.367,4,0.318,5,0.318,7,0.524,11,0.028,12,0.79,15,1.375,20,0.367,21,0.053,26,0.024,27,0.024,113,3.16,118,0.947,177,3.429,266,1.677,268,1.919,311,3.795,315,3.631,316,4.326,317,4.326]],["title/classes/Product.html",[21,0.04,318,1.76]],["body/classes/Product.html",[3,0.224,4,0.194,5,0.194,7,0.32,10,2.039,11,0.029,12,0.778,15,1.124,16,0.567,20,0.325,21,0.033,26,0.017,27,0.017,52,1.199,53,1.199,64,0.755,67,1.422,84,3.494,86,1.422,91,1.024,117,0.8,118,0.972,119,1.276,194,2.668,235,2.832,240,1.741,250,1.936,251,2.05,258,1.107,266,1.024,268,1.376,269,2.953,272,3.703,273,1.727,274,2.508,275,1.727,276,1.727,277,1.727,278,1.936,280,3.441,289,3.787,290,4.156,291,3.24,318,2.064,319,1.936,320,3.787,321,1.936,322,1.936,323,3.217,324,2.64,325,2.64,326,2.64,327,2.64,328,2.64,329,2.216,330,3.631,331,2.64,332,2.64,333,2.64,334,2.64,335,2.216,336,2.64,337,1.727,338,2.216]],["title/controllers/ProductsController.html",[0,1.008,339,2.138]],["body/controllers/ProductsController.html",[0,1.016,2,1.016,3,0.279,4,0.242,5,0.242,7,0.399,8,1.49,10,1.735,11,0.029,12,0.662,14,1.49,15,1.154,16,0.752,17,0.635,20,0.279,21,0.041,22,1.773,23,1.625,24,1.381,26,0.02,27,0.02,108,1.946,116,1.735,117,0.793,118,0.793,119,1.49,121,3.007,122,1.946,212,2.033,213,2.033,217,1.495,218,2.929,220,2.033,221,1.495,224,1.495,227,2.154,229,2.154,285,3.481,339,2.929,340,2.763,341,3.292,342,2.763,343,3.292,344,3.292,345,2.739,346,2.763,347,2.763,348,3.292,349,3.292,350,3.292]],["title/modules/ProductsModule.html",[28,1.008,42,1.931]],["body/modules/ProductsModule.html",[2,1.447,3,0.299,4,0.259,5,0.259,11,0.029,16,0.864,17,0.68,20,0.299,21,0.044,26,0.021,27,0.021,28,1.626,30,1.478,31,1.478,32,1.741,33,1.741,34,1.478,35,2.6,36,1.741,42,3.552,45,2.314,46,1.741,47,1.602,49,1.9,63,2.085,64,1.009,117,0.625,238,2.308,240,1.602,318,1.9,337,3.068,339,3.446,345,3.236,346,2.96,351,2.96,352,2.96,353,3.527,354,3.527,355,2.96,356,3.527]],["title/injectables/ProductsService.html",[100,1.008,345,1.76]],["body/injectables/ProductsService.html",[3,0.211,4,0.183,5,0.183,7,0.301,8,1.22,11,0.029,12,0.644,14,1.22,15,0.989,16,0.759,17,0.479,20,0.211,21,0.031,24,1.131,26,0.016,27,0.016,64,0.711,91,1.421,94,1.338,95,1.809,100,1.131,101,1.226,110,2.65,116,1.689,117,0.772,118,0.772,119,1.45,149,2.167,156,3.527,170,1.468,175,2.167,176,1.974,179,1.468,194,2.843,205,2.167,212,1.665,213,1.665,217,1.665,220,2.438,221,1.665,224,1.128,243,3.147,247,2.399,251,1.665,252,2.688,253,3.147,255,2.399,256,1.625,257,1.625,258,1.041,265,1.625,285,3.173,318,2.591,330,4.18,342,3.076,345,1.974,347,2.085,355,2.085,357,2.085,358,2.484,359,2.484,360,3.666,361,2.484,362,3.076,363,2.484,364,2.484,365,2.484,366,2.484,367,2.484,368,2.484,369,2.484]],["title/classes/Sale.html",[21,0.04,370,1.931]],["body/classes/Sale.html",[3,0.227,4,0.197,5,0.197,7,0.325,10,1.934,11,0.029,12,0.738,16,0.573,20,0.329,21,0.033,26,0.017,27,0.017,52,2.068,53,1.761,64,0.768,67,1.445,84,3.507,86,1.445,91,1.04,118,0.977,157,1.755,178,1.914,240,1.761,258,1.124,266,1.04,268,1.392,269,2.537,272,3.462,273,1.755,274,2.537,275,1.755,276,1.755,277,1.755,280,3.609,291,3.264,300,3.821,301,3.821,302,4.186,303,3.821,318,2.088,320,4.629,321,2.843,322,2.843,323,4.186,329,2.251,330,1.967,335,3.254,370,2.292,371,1.967,372,2.682,373,2.682,374,2.682,375,2.682,376,3.821,377,3.877,378,2.682,379,2.682,380,2.682,381,2.682,382,2.682,383,2.682,384,1.755,385,2.251]],["title/controllers/SalesController.html",[0,1.008,386,2.138]],["body/controllers/SalesController.html",[0,1.016,2,1.016,3,0.279,4,0.242,5,0.242,7,0.399,8,1.49,10,1.735,11,0.029,12,0.662,14,1.49,15,1.154,16,0.752,17,0.635,20,0.279,21,0.041,22,1.773,23,1.625,24,1.381,26,0.02,27,0.02,108,1.946,116,1.735,117,0.793,118,0.793,119,1.49,121,3.007,122,1.946,212,2.033,213,2.033,217,1.495,218,2.929,220,2.033,221,1.495,224,1.495,227,2.154,229,2.154,297,3.481,386,2.929,387,2.763,388,3.292,389,2.763,390,3.292,391,3.292,392,2.739,393,2.763,394,2.763,395,3.292,396,3.292,397,3.292]],["title/modules/SalesModule.html",[28,1.008,43,1.931]],["body/modules/SalesModule.html",[2,1.447,3,0.299,4,0.259,5,0.259,11,0.029,16,0.864,17,0.68,20,0.299,21,0.044,26,0.021,27,0.021,28,1.626,30,1.478,31,1.478,32,1.741,33,1.741,34,1.478,35,2.6,36,1.741,43,3.552,45,2.314,46,1.741,47,1.602,49,1.9,63,2.085,64,1.009,117,0.625,238,2.308,240,1.602,370,2.085,384,3.068,386,3.446,392,3.236,393,2.96,398,2.96,399,2.96,400,3.527,401,3.527,402,2.96,403,3.527]],["title/injectables/SalesService.html",[100,1.008,392,1.76]],["body/injectables/SalesService.html",[3,0.209,4,0.182,5,0.182,7,0.299,8,1.215,11,0.029,12,0.642,14,1.215,15,0.985,16,0.757,17,0.476,20,0.209,21,0.03,24,1.126,26,0.016,27,0.016,52,2.178,53,2.178,64,0.707,91,1.415,94,1.33,95,1.801,100,1.126,101,1.219,110,2.644,116,1.683,117,0.769,118,0.769,119,1.445,149,1.46,170,1.46,175,2.158,176,1.966,179,1.46,205,2.158,212,1.658,213,1.658,217,1.658,220,2.433,221,1.658,224,1.122,243,3.138,247,2.388,248,4.025,249,3.063,251,1.658,253,3.138,255,2.388,256,1.616,257,1.616,258,1.035,265,1.616,297,3.167,370,2.835,376,4.775,389,3.063,392,1.966,394,2.073,402,2.073,404,2.073,405,2.469,406,2.469,407,3.65,408,2.469,409,3.65,410,2.469,411,2.469,412,2.469,413,2.469,414,2.469,415,2.469,416,2.469]],["title/classes/User.html",[21,0.04,178,1.613]],["body/classes/User.html",[3,0.237,4,0.206,5,0.206,7,0.339,10,1.972,11,0.029,12,0.752,15,1.36,16,0.591,20,0.339,21,0.035,26,0.018,27,0.018,52,1.271,64,0.801,67,1.507,84,3.543,86,1.507,91,1.085,117,0.826,118,0.953,157,3.328,176,1.507,177,3.007,178,2.511,184,2.052,194,2.757,201,4.269,240,1.815,258,1.173,266,1.085,268,1.435,269,3.051,270,3.355,272,3.52,273,1.831,274,2.615,275,1.831,276,1.831,277,1.831,278,2.052,279,2.349,280,3.051,311,3.051,321,2.052,322,2.931,417,2.052,418,2.798,419,2.798,420,2.798,421,3.355,422,2.798,423,2.349,424,2.798,425,1.831,426,2.349]],["title/controllers/UsersController.html",[0,1.008,427,2.138]],["body/controllers/UsersController.html",[0,1.016,2,1.016,3,0.279,4,0.242,5,0.242,7,0.399,8,1.49,10,1.735,11,0.029,12,0.662,14,1.49,15,1.154,16,0.752,17,0.635,20,0.279,21,0.041,22,1.773,23,1.625,24,1.381,26,0.02,27,0.02,108,1.946,116,1.735,117,0.793,118,0.793,119,1.49,121,3.007,122,1.946,151,2.51,212,2.033,213,2.033,217,1.495,218,2.929,220,2.033,221,1.495,224,1.495,227,2.154,229,2.154,308,3.481,427,2.929,428,2.763,429,3.292,430,2.763,431,3.292,432,3.292,433,2.763,434,2.763,435,3.292,436,3.292,437,3.292]],["title/modules/UsersModule.html",[28,1.008,44,1.76]],["body/modules/UsersModule.html",[2,1.381,3,0.279,4,0.242,5,0.242,11,0.029,16,0.844,17,0.635,20,0.279,21,0.041,26,0.02,27,0.02,28,1.57,30,1.38,31,1.38,32,1.625,33,1.625,34,1.38,35,2.51,36,2.51,44,3.245,45,2.209,46,1.625,47,1.495,49,1.773,63,1.946,64,0.942,117,0.583,151,3.155,178,1.625,198,2.763,208,2.763,238,2.154,240,1.495,425,2.929,427,3.328,433,2.763,438,2.763,439,2.763,440,2.763,441,3.292,442,3.292,443,2.763,444,3.292,445,3.292,446,3.292]],["title/injectables/UsersService.html",[100,1.008,151,1.613]],["body/injectables/UsersService.html",[3,0.173,4,0.15,5,0.15,7,0.247,8,1.052,11,0.029,12,0.644,14,1.288,15,1.131,16,0.737,17,0.394,20,0.173,21,0.025,24,1.194,26,0.014,27,0.014,53,1.436,64,0.585,91,1.5,94,1.1,95,1.561,100,0.976,101,1.008,110,2.719,116,1.688,117,0.772,118,0.772,119,1.449,149,1.208,151,1.561,156,3.653,157,3.806,168,1.715,169,1.498,170,1.208,175,2.574,176,2.345,177,3.071,178,2.149,179,1.869,184,2.319,186,2.654,194,2.945,205,1.869,212,1.436,213,1.436,217,1.436,220,2.262,221,1.757,224,0.928,243,2.849,247,2.069,251,1.757,252,2.319,253,3.259,255,2.849,256,1.337,257,1.337,258,0.856,265,1.337,308,3.071,311,1.337,362,2.654,423,2.654,430,2.654,434,1.715,443,1.715,447,1.715,448,3.162,449,2.043,450,2.043,451,3.162,452,2.043,453,3.162,454,2.043,455,2.043,456,2.043,457,3.162,458,2.043,459,2.043,460,2.043,461,2.043,462,2.043,463,2.043,464,2.043,465,2.043,466,2.043]],["title/coverage.html",[467,3.266]],["body/coverage.html",[0,1.669,1,1.66,5,0.186,6,2.129,11,0.029,18,1.366,21,0.072,26,0.016,27,0.016,34,1.063,88,4.077,95,1.252,100,1.669,102,2.129,106,1.66,107,2.129,113,1.5,118,0.449,123,1.366,148,2.129,151,1.252,178,1.252,209,1.66,210,2.129,215,1.5,222,1.366,235,1.366,236,1.66,241,2.129,267,2.73,282,2.129,283,2.129,285,1.5,286,2.129,287,2.129,297,1.5,298,2.129,299,2.129,308,1.5,309,2.129,310,2.129,315,2.129,318,1.366,319,2.73,337,1.66,339,1.66,340,2.129,345,1.366,357,2.129,370,1.5,371,2.73,384,1.66,386,1.66,387,2.129,392,1.366,404,2.129,417,2.73,425,1.66,427,1.66,428,2.129,447,2.129,467,1.86,468,2.129,469,2.537,470,2.537,471,6.452,472,5.174,473,2.537,474,2.537,475,5.174,476,4.41,477,4.41,478,2.129,479,2.537,480,5.174,481,3.723,482,4.41,483,2.537,484,2.537,485,2.537,486,2.537,487,2.537]],["title/dependencies.html",[31,1.647,488,2.292]],["body/dependencies.html",[11,0.029,17,0.806,26,0.023,27,0.023,31,1.75,64,1.195,66,3.062,135,3.062,169,3.062,258,1.75,489,5.708,490,4.175,491,4.175,492,4.175,493,4.175,494,4.175,495,4.175,496,4.175,497,5.228,498,4.175,499,4.175,500,4.175,501,4.175,502,4.175,503,4.175,504,4.175,505,4.175]],["title/miscellaneous/functions.html",[506,1.787,507,3.297]],["body/miscellaneous/functions.html",[7,0.598,11,0.025,26,0.025,27,0.025,34,2.574,478,4.142,506,3.23,507,4.142,508,4.936]],["title/index.html",[7,0.331,509,2.731,510,2.731]],["body/index.html",[4,0.154,11,0.027,26,0.014,27,0.014,47,2.283,55,4.537,251,0.949,467,1.532,468,2.7,511,2.089,512,2.089,513,3.923,514,3.217,515,2.089,516,2.089,517,2.089,518,2.089,519,3.217,520,3.923,521,2.089,522,2.089,523,2.089,524,4.406,525,2.089,526,4.406,527,5.406,528,2.089,529,5.236,530,2.089,531,2.089,532,2.089,533,3.217,534,2.089,535,3.217,536,2.089,537,3.923,538,2.089,539,3.217,540,2.089,541,2.089,542,2.089,543,2.089,544,2.089,545,4.406,546,5.026,547,2.089,548,3.217,549,2.089,550,2.089,551,2.089,552,2.089,553,2.089,554,5.026,555,3.217,556,4.406,557,2.089,558,3.217,559,2.089,560,2.089,561,3.217,562,4.758,563,4.406,564,2.089,565,3.217,566,2.089,567,2.089,568,2.089,569,2.089,570,4.406,571,2.089,572,2.089,573,2.089,574,2.089,575,2.089,576,3.217,577,2.089,578,2.089,579,2.089,580,2.089,581,2.089,582,3.217,583,2.089,584,2.089,585,2.089,586,3.217,587,2.089,588,2.089,589,3.698,590,3.217,591,2.089,592,2.089,593,2.089,594,2.089,595,2.089,596,2.089,597,2.089,598,2.089,599,3.217,600,2.089,601,2.089,602,2.089,603,2.089,604,3.923,605,2.089,606,2.089,607,2.089,608,2.089,609,2.089,610,2.089,611,3.217,612,2.089,613,2.089,614,2.089,615,2.089,616,2.089,617,3.217,618,2.089,619,2.089,620,2.089,621,3.217,622,3.217,623,2.089,624,2.089,625,2.089,626,2.089,627,2.089,628,2.089,629,2.089,630,2.089,631,2.089,632,2.089,633,2.089,634,1.753,635,2.089,636,2.089,637,2.089,638,2.089,639,2.089,640,2.089,641,1.753]],["title/modules.html",[30,1.867]],["body/modules.html",[11,0.024,26,0.024,27,0.024,29,2.845,30,1.823,40,2.571,41,2.571,42,2.571,43,2.571,44,2.342,589,5.328,642,6.348,643,6.348,644,6.348]],["title/overview.html",[645,3.738]],["body/overview.html",[2,0.946,11,0.028,18,2.638,26,0.019,27,0.019,28,0.946,29,4.191,30,1.284,31,1.284,32,1.512,33,1.512,34,1.284,35,1.512,36,1.512,37,2.571,38,2.571,39,2.571,40,3.493,41,3.29,42,3.29,43,3.29,44,3.183,45,2.103,46,1.512,47,1.392,101,1.512,123,2.638,129,2.571,131,2.571,151,2.917,222,2.638,231,2.571,232,2.571,266,1.188,345,2.638,351,2.571,352,2.571,392,2.638,398,2.571,399,2.571,438,2.571,439,2.571,440,2.571,645,2.571,646,4.898,647,3.064]],["title/properties.html",[268,1.41,488,2.292]],["body/properties.html",[11,0.029,26,0.025,27,0.025,251,2.203,268,1.742,634,4.071,641,4.071,648,4.85,649,4.85,650,4.85]],["title/miscellaneous/variables.html",[68,2.881,506,1.787]],["body/miscellaneous/variables.html",[7,0.516,11,0.028,26,0.023,27,0.023,68,3.124,236,3.464,267,3.124,281,3.575,319,3.124,337,3.464,338,3.575,371,3.124,384,3.464,385,3.575,417,3.124,421,5.057,425,3.464,426,3.575,506,2.787,651,4.26,652,4.26,653,4.26,654,4.26,655,6.026]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateSaleDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/Product.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/Sale.html":{},"controllers/SalesController.html":{},"modules/SalesModule.html":{},"injectables/SalesService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":471,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":649,"title":{},"body":{"properties.html":{}}}],["0.2.2",{"_index":503,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":480,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":472,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":475,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":483,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":482,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":481,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":474,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":459,"title":{},"body":{"injectables/UsersService.html":{}}}],["11.0.0",{"_index":492,"title":{},"body":{"dependencies.html":{}}}],["11.0.1",{"_index":489,"title":{},"body":{"dependencies.html":{}}}],["11.0.3",{"_index":493,"title":{},"body":{"dependencies.html":{}}}],["1d",{"_index":146,"title":{},"body":{"modules/AuthModule.html":{}}}],["2/4",{"_index":477,"title":{},"body":{"coverage.html":{}}}],["3.0.2",{"_index":498,"title":{},"body":{"dependencies.html":{}}}],["3/5",{"_index":485,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":473,"title":{},"body":{"coverage.html":{}}}],["4.0.2",{"_index":490,"title":{},"body":{"dependencies.html":{}}}],["5.0.0",{"_index":497,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":476,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":646,"title":{},"body":{"overview.html":{}}}],["60",{"_index":484,"title":{},"body":{"coverage.html":{}}}],["7.8.1",{"_index":505,"title":{},"body":{"dependencies.html":{}}}],["8.16.4",{"_index":499,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":647,"title":{},"body":{"overview.html":{}}}],["_id",{"_index":199,"title":{},"body":{"injectables/AuthService.html":{}}}],["access_token",{"_index":207,"title":{},"body":{"injectables/AuthService.html":{}}}],["agrega",{"_index":137,"title":{},"body":{"modules/AuthModule.html":{}}}],["al",{"_index":377,"title":{},"body":{"classes/Sale.html":{}}}],["allowing",{"_index":577,"title":{},"body":{"index.html":{}}}],["almacenado",{"_index":188,"title":{},"body":{"injectables/AuthService.html":{}}}],["amazing",{"_index":627,"title":{},"body":{"index.html":{}}}],["aplicación",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["app.controller",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":546,"title":{},"body":{"index.html":{}}}],["applications",{"_index":519,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":29,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":110,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CategoriesService.html":{},"injectables/ProductsService.html":{},"injectables/SalesService.html":{},"injectables/UsersService.html":{}}}],["auth",{"_index":109,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":133,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":124,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":106,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authmodule",{"_index":40,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":634,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":123,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["await",{"_index":179,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CategoriesService.html":{},"injectables/ProductsService.html":{},"injectables/SalesService.html":{},"injectables/UsersService.html":{}}}],["aws",{"_index":565,"title":{},"body":{"index.html":{}}}],["backers",{"_index":628,"title":{},"body":{"index.html":{}}}],["based",{"_index":560,"title":{},"body":{"index.html":{}}}],["bcrypt",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["bcrypt.compare",{"_index":190,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(createuserdto.password",{"_index":458,"title":{},"body":{"injectables/UsersService.html":{}}}],["bcryptjs",{"_index":169,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["board",{"_index":620,"title":{},"body":{"index.html":{}}}],["body",{"_index":122,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{},"controllers/SalesController.html":{},"controllers/UsersController.html":{}}}],["bootstrap",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/ProductsModule.html":{},"modules/SalesModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":644,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":642,"title":{},"body":{"modules.html":{}}}],["building",{"_index":514,"title":{},"body":{"index.html":{}}}],["busca",{"_index":175,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CategoriesService.html":{},"injectables/ProductsService.html":{},"injectables/SalesService.html":{},"injectables/UsersService.html":{}}}],["básicos",{"_index":206,"title":{},"body":{"injectables/AuthService.html":{}}}],["cantidad",{"_index":381,"title":{},"body":{"classes/Sale.html":{}}}],["categories",{"_index":211,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["categories.controller",{"_index":234,"title":{},"body":{"modules/CategoriesModule.html":{}}}],["categories.service",{"_index":223,"title":{},"body":{"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{}}}],["categories/categories.module",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["categoriescontroller",{"_index":209,"title":{"controllers/CategoriesController.html":{}},"body":{"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"coverage.html":{}}}],["categoriesmodule",{"_index":41,"title":{"modules/CategoriesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CategoriesModule.html":{},"modules.html":{},"overview.html":{}}}],["categoriesservice",{"_index":222,"title":{"injectables/CategoriesService.html":{}},"body":{"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"coverage.html":{},"overview.html":{}}}],["category",{"_index":235,"title":{"classes/Category.html":{}},"body":{"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"classes/Product.html":{},"coverage.html":{}}}],["category.dto",{"_index":225,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{}}}],["category.dto.ts",{"_index":283,"title":{},"body":{"classes/CreateCategoryDto.html":{},"coverage.html":{}}}],["category.dto.ts:2",{"_index":284,"title":{},"body":{"classes/CreateCategoryDto.html":{}}}],["category.name",{"_index":239,"title":{},"body":{"modules/CategoriesModule.html":{}}}],["categoryid",{"_index":288,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["categorymodel",{"_index":245,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["categoryschema",{"_index":236,"title":{},"body":{"modules/CategoriesModule.html":{},"classes/Category.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["categoría",{"_index":250,"title":{},"body":{"injectables/CategoriesService.html":{},"classes/Category.html":{},"classes/Product.html":{}}}],["channel",{"_index":592,"title":{},"body":{"index.html":{}}}],["check",{"_index":554,"title":{},"body":{"index.html":{}}}],["class",{"_index":21,"title":{"classes/Category.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateSaleDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/Product.html":{},"classes/Sale.html":{},"classes/User.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateSaleDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/Product.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/Sale.html":{},"controllers/SalesController.html":{},"modules/SalesModule.html":{},"injectables/SalesService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["classes",{"_index":266,"title":{},"body":{"classes/Category.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateSaleDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/Product.html":{},"classes/Sale.html":{},"classes/User.html":{},"overview.html":{}}}],["clave",{"_index":446,"title":{},"body":{"modules/UsersModule.html":{}}}],["clicks",{"_index":576,"title":{},"body":{"index.html":{}}}],["cloud",{"_index":559,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":129,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":130,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":131,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_categoriesmodule",{"_index":231,"title":{},"body":{"modules/CategoriesModule.html":{},"overview.html":{}}}],["cluster_categoriesmodule_providers",{"_index":232,"title":{},"body":{"modules/CategoriesModule.html":{},"overview.html":{}}}],["cluster_productsmodule",{"_index":351,"title":{},"body":{"modules/ProductsModule.html":{},"overview.html":{}}}],["cluster_productsmodule_providers",{"_index":352,"title":{},"body":{"modules/ProductsModule.html":{},"overview.html":{}}}],["cluster_salesmodule",{"_index":398,"title":{},"body":{"modules/SalesModule.html":{},"overview.html":{}}}],["cluster_salesmodule_providers",{"_index":399,"title":{},"body":{"modules/SalesModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":438,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":440,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":439,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["come",{"_index":583,"title":{},"body":{"index.html":{}}}],["compara",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{}}}],["con",{"_index":186,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["conexión",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["configmodule.forroot",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":136,"title":{},"body":{"modules/AuthModule.html":{}}}],["configservice.get('jwt_secret",{"_index":142,"title":{},"body":{"modules/AuthModule.html":{}}}],["configura",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["const",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"classes/Product.html":{},"injectables/ProductsService.html":{},"classes/Sale.html":{},"injectables/SalesService.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["constructor",{"_index":149,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CategoriesService.html":{},"injectables/ProductsService.html":{},"injectables/SalesService.html":{},"injectables/UsersService.html":{}}}],["constructor(@injectmodel(sale.name",{"_index":411,"title":{},"body":{"injectables/SalesService.html":{}}}],["constructor(@injectmodel(user.name",{"_index":456,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(categorymodel",{"_index":242,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{},"controllers/SalesController.html":{},"controllers/UsersController.html":{}}}],["constructor(productmodel",{"_index":358,"title":{},"body":{"injectables/ProductsService.html":{}}}],["constructor(salemodel",{"_index":405,"title":{},"body":{"injectables/SalesService.html":{}}}],["constructor(usermodel",{"_index":449,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(usersservice",{"_index":150,"title":{},"body":{"injectables/AuthService.html":{}}}],["consultar",{"_index":172,"title":{},"body":{"injectables/AuthService.html":{}}}],["contraseña",{"_index":184,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["controlador",{"_index":97,"title":{},"body":{"modules/AppModule.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{},"controllers/SalesController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{},"controllers/SalesController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('categories",{"_index":226,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["controller('products",{"_index":348,"title":{},"body":{"controllers/ProductsController.html":{}}}],["controller('sales",{"_index":395,"title":{},"body":{"controllers/SalesController.html":{}}}],["controller('users",{"_index":435,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"controllers/SalesController.html":{},"modules/SalesModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["courses",{"_index":598,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":467,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["crea",{"_index":247,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/ProductsService.html":{},"injectables/SalesService.html":{},"injectables/UsersService.html":{}}}],["crear",{"_index":252,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["create",{"_index":212,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/SalesController.html":{},"injectables/SalesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["create(@body",{"_index":227,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{},"controllers/SalesController.html":{},"controllers/UsersController.html":{}}}],["create(createcategorydto",{"_index":214,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{}}}],["create(createproductdto",{"_index":342,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["create(createsaledto",{"_index":389,"title":{},"body":{"controllers/SalesController.html":{},"injectables/SalesService.html":{}}}],["create(createuserdto",{"_index":430,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["createcategorydto",{"_index":215,"title":{"classes/CreateCategoryDto.html":{}},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"classes/CreateCategoryDto.html":{},"coverage.html":{}}}],["createdcategory",{"_index":260,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["createdcategory.save",{"_index":262,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["createdproduct",{"_index":365,"title":{},"body":{"injectables/ProductsService.html":{}}}],["createdproduct.save",{"_index":367,"title":{},"body":{"injectables/ProductsService.html":{}}}],["createdsale",{"_index":412,"title":{},"body":{"injectables/SalesService.html":{}}}],["createdsale.save",{"_index":414,"title":{},"body":{"injectables/SalesService.html":{}}}],["createduser",{"_index":460,"title":{},"body":{"injectables/UsersService.html":{}}}],["createduser.save",{"_index":462,"title":{},"body":{"injectables/UsersService.html":{}}}],["createproductdto",{"_index":285,"title":{"classes/CreateProductDto.html":{}},"body":{"classes/CreateProductDto.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"coverage.html":{}}}],["createsaledto",{"_index":297,"title":{"classes/CreateSaleDto.html":{}},"body":{"classes/CreateSaleDto.html":{},"controllers/SalesController.html":{},"injectables/SalesService.html":{},"coverage.html":{}}}],["createuserdto",{"_index":308,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["credenciales",{"_index":160,"title":{},"body":{"injectables/AuthService.html":{}}}],["database_url",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["datos",{"_index":205,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CategoriesService.html":{},"injectables/ProductsService.html":{},"injectables/SalesService.html":{},"injectables/UsersService.html":{}}}],["dburl",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["de",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"classes/Product.html":{},"classes/Sale.html":{},"injectables/SalesService.html":{},"classes/User.html":{}}}],["declarations",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/ProductsModule.html":{},"modules/SalesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"classes/Category.html":{},"classes/Product.html":{},"controllers/ProductsController.html":{},"classes/Sale.html":{},"controllers/SalesController.html":{},"classes/User.html":{},"controllers/UsersController.html":{}}}],["deeper",{"_index":594,"title":{},"body":{"index.html":{}}}],["default",{"_index":421,"title":{},"body":{"classes/User.html":{},"miscellaneous/variables.html":{}}}],["defaultsecret",{"_index":143,"title":{},"body":{"modules/AuthModule.html":{}}}],["defecto",{"_index":424,"title":{},"body":{"classes/User.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateSaleDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/Product.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/Sale.html":{},"controllers/SalesController.html":{},"injectables/SalesService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["del",{"_index":194,"title":{},"body":{"injectables/AuthService.html":{},"classes/Product.html":{},"injectables/ProductsService.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["dependencies",{"_index":31,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/ProductsModule.html":{},"modules/SalesModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":545,"title":{},"body":{"index.html":{}}}],["deploying",{"_index":564,"title":{},"body":{"index.html":{}}}],["deployment",{"_index":555,"title":{},"body":{"index.html":{}}}],["deploywith",{"_index":575,"title":{},"body":{"index.html":{}}}],["descripción",{"_index":331,"title":{},"body":{"classes/Product.html":{}}}],["description",{"_index":251,"title":{},"body":{"injectables/CategoriesService.html":{},"classes/CreateProductDto.html":{},"classes/Product.html":{},"injectables/ProductsService.html":{},"injectables/SalesService.html":{},"injectables/UsersService.html":{},"index.html":{},"properties.html":{}}}],["development",{"_index":530,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":606,"title":{},"body":{"index.html":{}}}],["discord",{"_index":591,"title":{},"body":{"index.html":{}}}],["disponible",{"_index":334,"title":{},"body":{"classes/Product.html":{}}}],["dive",{"_index":593,"title":{},"body":{"index.html":{}}}],["document",{"_index":274,"title":{},"body":{"classes/Category.html":{},"classes/Product.html":{},"classes/Sale.html":{},"classes/User.html":{}}}],["documentation",{"_index":468,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dominio",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["dto/create",{"_index":224,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/SalesController.html":{},"injectables/SalesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dto/login.dto",{"_index":125,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["e2e",{"_index":540,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":515,"title":{},"body":{"index.html":{}}}],["efficiently",{"_index":552,"title":{},"body":{"index.html":{}}}],["el",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{}}}],["email",{"_index":177,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["ensure",{"_index":550,"title":{},"body":{"index.html":{}}}],["enterprise",{"_index":610,"title":{},"body":{"index.html":{}}}],["entorno",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["env",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["error('database_url",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["es",{"_index":198,"title":{},"body":{"injectables/AuthService.html":{},"modules/UsersModule.html":{}}}],["esquema",{"_index":275,"title":{},"body":{"classes/Category.html":{},"classes/Product.html":{},"classes/Sale.html":{},"classes/User.html":{}}}],["esta",{"_index":444,"title":{},"body":{"modules/UsersModule.html":{}}}],["esto",{"_index":138,"title":{},"body":{"modules/AuthModule.html":{}}}],["example",{"_index":526,"title":{},"body":{"index.html":{}}}],["exec",{"_index":466,"title":{},"body":{"injectables/UsersService.html":{}}}],["experience",{"_index":596,"title":{},"body":{"index.html":{}}}],["expiresin",{"_index":145,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateSaleDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/Product.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/Sale.html":{},"controllers/SalesController.html":{},"modules/SalesModule.html":{},"injectables/SalesService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/ProductsModule.html":{},"modules/SalesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":495,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":277,"title":{},"body":{"classes/Category.html":{},"classes/Product.html":{},"classes/Sale.html":{},"classes/User.html":{}}}],["fast",{"_index":568,"title":{},"body":{"index.html":{}}}],["features",{"_index":579,"title":{},"body":{"index.html":{}}}],["few",{"_index":570,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateSaleDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/Product.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/Sale.html":{},"controllers/SalesController.html":{},"modules/SalesModule.html":{},"injectables/SalesService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["findbyemail",{"_index":448,"title":{},"body":{"injectables/UsersService.html":{}}}],["findbyemail(email",{"_index":453,"title":{},"body":{"injectables/UsersService.html":{}}}],["findone",{"_index":213,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/SalesController.html":{},"injectables/SalesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findone(@param('id",{"_index":229,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{},"controllers/SalesController.html":{},"controllers/UsersController.html":{}}}],["findone(id",{"_index":217,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/SalesController.html":{},"injectables/SalesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["focus",{"_index":578,"title":{},"body":{"index.html":{}}}],["follow",{"_index":614,"title":{},"body":{"index.html":{}}}],["forma",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["found",{"_index":265,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/ProductsService.html":{},"injectables/SalesService.html":{},"injectables/UsersService.html":{}}}],["framework",{"_index":513,"title":{},"body":{"index.html":{}}}],["full",{"_index":609,"title":{},"body":{"index.html":{}}}],["function",{"_index":479,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":507,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":573,"title":{},"body":{"index.html":{}}}],["genera",{"_index":203,"title":{},"body":{"injectables/AuthService.html":{}}}],["generar",{"_index":173,"title":{},"body":{"injectables/AuthService.html":{}}}],["get(':id",{"_index":218,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{},"controllers/SalesController.html":{},"controllers/UsersController.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":509,"title":{"index.html":{}},"body":{}}],["global",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["globales",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["graph",{"_index":601,"title":{},"body":{"index.html":{}}}],["grow",{"_index":624,"title":{},"body":{"index.html":{}}}],["habilita",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["hands",{"_index":595,"title":{},"body":{"index.html":{}}}],["handy",{"_index":584,"title":{},"body":{"index.html":{}}}],["hash",{"_index":187,"title":{},"body":{"injectables/AuthService.html":{}}}],["hasheada",{"_index":423,"title":{},"body":{"classes/User.html":{},"injectables/UsersService.html":{}}}],["hashedpassword",{"_index":457,"title":{},"body":{"injectables/UsersService.html":{}}}],["hello",{"_index":104,"title":{},"body":{"injectables/AppService.html":{}}}],["help",{"_index":599,"title":{},"body":{"index.html":{}}}],["here",{"_index":632,"title":{},"body":{"index.html":{}}}],["https://nestjs.com",{"_index":638,"title":{},"body":{"index.html":{}}}],["id",{"_index":220,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/SalesController.html":{},"injectables/SalesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["identifier",{"_index":469,"title":{},"body":{"coverage.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"classes/Product.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/Sale.html":{},"controllers/SalesController.html":{},"modules/SalesModule.html":{},"injectables/SalesService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["importa",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["imports",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/ProductsModule.html":{},"modules/SalesModule.html":{},"modules/UsersModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateSaleDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/Product.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/Sale.html":{},"controllers/SalesController.html":{},"injectables/SalesService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateSaleDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/Product.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/Sale.html":{},"controllers/SalesController.html":{},"modules/SalesModule.html":{},"injectables/SalesService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["information",{"_index":557,"title":{},"body":{"index.html":{}}}],["infrastructure",{"_index":581,"title":{},"body":{"index.html":{}}}],["inject",{"_index":147,"title":{},"body":{"modules/AuthModule.html":{}}}],["injectable",{"_index":100,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CategoriesService.html":{},"injectables/ProductsService.html":{},"injectables/SalesService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CategoriesService.html":{},"injectables/ProductsService.html":{},"injectables/SalesService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":101,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CategoriesService.html":{},"injectables/ProductsService.html":{},"injectables/SalesService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectmodel",{"_index":257,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/ProductsService.html":{},"injectables/SalesService.html":{},"injectables/UsersService.html":{}}}],["injectmodel(category.name",{"_index":259,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["injectmodel(product.name",{"_index":364,"title":{},"body":{"injectables/ProductsService.html":{}}}],["install",{"_index":572,"title":{},"body":{"index.html":{}}}],["installcompile",{"_index":528,"title":{},"body":{"index.html":{}}}],["interact",{"_index":602,"title":{},"body":{"index.html":{}}}],["inválidas",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{}}}],["isglobal",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["ispasswordvalid",{"_index":189,"title":{},"body":{"injectables/AuthService.html":{}}}],["job",{"_index":617,"title":{},"body":{"index.html":{}}}],["jobs",{"_index":619,"title":{},"body":{"index.html":{}}}],["join",{"_index":630,"title":{},"body":{"index.html":{}}}],["jwt",{"_index":162,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtmodule",{"_index":134,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":139,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":152,"title":{},"body":{"injectables/AuthService.html":{}}}],["kamil",{"_index":635,"title":{},"body":{"index.html":{}}}],["key",{"_index":547,"title":{},"body":{"index.html":{}}}],["la",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"classes/Product.html":{},"classes/Sale.html":{},"injectables/SalesService.html":{},"injectables/UsersService.html":{}}}],["las",{"_index":159,"title":{},"body":{"injectables/AuthService.html":{}}}],["learn",{"_index":587,"title":{},"body":{"index.html":{}}}],["legend",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/ProductsModule.html":{},"modules/SalesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["license",{"_index":641,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":622,"title":{},"body":{"index.html":{}}}],["linkedin",{"_index":616,"title":{},"body":{"index.html":{}}}],["login",{"_index":111,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login(@body",{"_index":127,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(logindto",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["logindto",{"_index":113,"title":{"classes/LoginDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"coverage.html":{}}}],["logindto.password",{"_index":191,"title":{},"body":{"injectables/AuthService.html":{}}}],["looking",{"_index":558,"title":{},"body":{"index.html":{}}}],["loop",{"_index":612,"title":{},"body":{"index.html":{}}}],["los",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{}}}],["línea",{"_index":445,"title":{},"body":{"modules/UsersModule.html":{}}}],["makes",{"_index":566,"title":{},"body":{"index.html":{}}}],["managing",{"_index":580,"title":{},"body":{"index.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateSaleDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/Product.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/Sale.html":{},"controllers/SalesController.html":{},"modules/SalesModule.html":{},"injectables/SalesService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["mau",{"_index":562,"title":{},"body":{"index.html":{}}}],["metadata",{"_index":502,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/SalesController.html":{},"injectables/SalesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["miscellaneous",{"_index":506,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":621,"title":{},"body":{"index.html":{}}}],["mode",{"_index":533,"title":{},"body":{"index.html":{}}}],["model",{"_index":243,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/ProductsService.html":{},"injectables/SalesService.html":{},"injectables/UsersService.html":{}}}],["module",{"_index":28,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/ProductsModule.html":{},"modules/SalesModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/ProductsModule.html":{},"modules/SalesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["modules",{"_index":30,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/ProductsModule.html":{},"modules/SalesModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["mongodb",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"classes/Category.html":{},"classes/Product.html":{},"classes/Sale.html":{},"classes/User.html":{}}}],["mongoose",{"_index":258,"title":{},"body":{"injectables/CategoriesService.html":{},"classes/Category.html":{},"classes/Product.html":{},"injectables/ProductsService.html":{},"classes/Sale.html":{},"injectables/SalesService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["mongoosemodule",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"modules/CategoriesModule.html":{},"modules/ProductsModule.html":{},"modules/SalesModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forfeature",{"_index":238,"title":{},"body":{"modules/CategoriesModule.html":{},"modules/ProductsModule.html":{},"modules/SalesModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forroot",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["more",{"_index":556,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":636,"title":{},"body":{"index.html":{}}}],["módulo",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["módulos",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["name",{"_index":117,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/Product.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"controllers/SalesController.html":{},"modules/SalesModule.html":{},"injectables/SalesService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["need",{"_index":607,"title":{},"body":{"index.html":{}}}],["nest",{"_index":520,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":640,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"controllers/SalesController.html":{},"modules/SalesModule.html":{},"injectables/SalesService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":491,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":135,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mau",{"_index":574,"title":{},"body":{"index.html":{}}}],["nestjs/mongoose",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"classes/Product.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/Sale.html":{},"modules/SalesModule.html":{},"injectables/SalesService.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":494,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/CategoriesService.html":{},"injectables/ProductsService.html":{},"injectables/SalesService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["nico",{"_index":279,"title":{},"body":{"classes/Category.html":{},"classes/User.html":{}}}],["node.js",{"_index":512,"title":{},"body":{"index.html":{}}}],["nombre",{"_index":278,"title":{},"body":{"classes/Category.html":{},"classes/Product.html":{},"classes/User.html":{}}}],["notfoundexception",{"_index":256,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/ProductsService.html":{},"injectables/SalesService.html":{},"injectables/UsersService.html":{}}}],["notfoundexception('category",{"_index":264,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["notfoundexception('product",{"_index":369,"title":{},"body":{"injectables/ProductsService.html":{}}}],["notfoundexception('sale",{"_index":416,"title":{},"body":{"injectables/SalesService.html":{}}}],["notfoundexception('user",{"_index":464,"title":{},"body":{"injectables/UsersService.html":{}}}],["npm",{"_index":527,"title":{},"body":{"index.html":{}}}],["nueva",{"_index":249,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/SalesService.html":{}}}],["nuevo",{"_index":362,"title":{},"body":{"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["number",{"_index":291,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateSaleDto.html":{},"classes/Product.html":{},"classes/Sale.html":{}}}],["offer",{"_index":618,"title":{},"body":{"index.html":{}}}],["official",{"_index":563,"title":{},"body":{"index.html":{}}}],["opcional",{"_index":332,"title":{},"body":{"classes/Product.html":{}}}],["open",{"_index":623,"title":{},"body":{"index.html":{}}}],["optional",{"_index":119,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"classes/CreateProductDto.html":{},"classes/Product.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/SalesController.html":{},"injectables/SalesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["out",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/ProductsModule.html":{},"modules/SalesModule.html":{},"modules/UsersModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":645,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":488,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["para",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"classes/Category.html":{},"classes/Product.html":{},"classes/Sale.html":{},"classes/User.html":{}}}],["param",{"_index":221,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/SalesController.html":{},"injectables/SalesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["parameters",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/SalesController.html":{},"injectables/SalesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["part",{"_index":608,"title":{},"body":{"index.html":{}}}],["password",{"_index":311,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["payload",{"_index":193,"title":{},"body":{"injectables/AuthService.html":{}}}],["platform",{"_index":561,"title":{},"body":{"index.html":{}}}],["please",{"_index":590,"title":{},"body":{"index.html":{}}}],["por",{"_index":176,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CategoriesService.html":{},"injectables/ProductsService.html":{},"injectables/SalesService.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["possible",{"_index":553,"title":{},"body":{"index.html":{}}}],["post",{"_index":121,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{},"controllers/SalesController.html":{},"controllers/UsersController.html":{}}}],["post('login",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{}}}],["precio",{"_index":333,"title":{},"body":{"classes/Product.html":{}}}],["prefix",{"_index":108,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{},"controllers/SalesController.html":{},"controllers/UsersController.html":{}}}],["price",{"_index":289,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Product.html":{}}}],["principal",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["prisma",{"_index":500,"title":{},"body":{"dependencies.html":{}}}],["prisma/client",{"_index":496,"title":{},"body":{"dependencies.html":{}}}],["private",{"_index":170,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CategoriesService.html":{},"injectables/ProductsService.html":{},"injectables/SalesService.html":{},"injectables/UsersService.html":{}}}],["process.env.database_url",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["product",{"_index":318,"title":{"classes/Product.html":{}},"body":{"classes/Product.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/Sale.html":{},"coverage.html":{}}}],["product.dto",{"_index":347,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["product.dto.ts",{"_index":287,"title":{},"body":{"classes/CreateProductDto.html":{},"coverage.html":{}}}],["product.dto.ts:2",{"_index":294,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:3",{"_index":293,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:4",{"_index":295,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:5",{"_index":296,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:6",{"_index":292,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.name",{"_index":356,"title":{},"body":{"modules/ProductsModule.html":{}}}],["productid",{"_index":300,"title":{},"body":{"classes/CreateSaleDto.html":{},"classes/Sale.html":{}}}],["production",{"_index":535,"title":{},"body":{"index.html":{}}}],["productmodel",{"_index":360,"title":{},"body":{"injectables/ProductsService.html":{}}}],["producto",{"_index":330,"title":{},"body":{"classes/Product.html":{},"injectables/ProductsService.html":{},"classes/Sale.html":{}}}],["productos",{"_index":382,"title":{},"body":{"classes/Sale.html":{}}}],["products",{"_index":341,"title":{},"body":{"controllers/ProductsController.html":{}}}],["products.controller",{"_index":354,"title":{},"body":{"modules/ProductsModule.html":{}}}],["products.service",{"_index":346,"title":{},"body":{"controllers/ProductsController.html":{},"modules/ProductsModule.html":{}}}],["products/products.module",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["productschema",{"_index":337,"title":{},"body":{"classes/Product.html":{},"modules/ProductsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["productscontroller",{"_index":339,"title":{"controllers/ProductsController.html":{}},"body":{"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"coverage.html":{}}}],["productsmodule",{"_index":42,"title":{"modules/ProductsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProductsModule.html":{},"modules.html":{},"overview.html":{}}}],["productsservice",{"_index":345,"title":{"injectables/ProductsService.html":{}},"body":{"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"coverage.html":{},"overview.html":{}}}],["progressive",{"_index":511,"title":{},"body":{"index.html":{}}}],["project",{"_index":524,"title":{},"body":{"index.html":{}}}],["promise",{"_index":253,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/ProductsService.html":{},"injectables/SalesService.html":{},"injectables/UsersService.html":{}}}],["prop",{"_index":272,"title":{},"body":{"classes/Category.html":{},"classes/Product.html":{},"classes/Sale.html":{},"classes/User.html":{}}}],["prop({required",{"_index":269,"title":{},"body":{"classes/Category.html":{},"classes/Product.html":{},"classes/Sale.html":{},"classes/User.html":{}}}],["prop({type",{"_index":321,"title":{},"body":{"classes/Product.html":{},"classes/Sale.html":{},"classes/User.html":{}}}],["properties",{"_index":268,"title":{"properties.html":{}},"body":{"classes/Category.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateSaleDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/Product.html":{},"classes/Sale.html":{},"classes/User.html":{},"properties.html":{}}}],["proporcionada",{"_index":185,"title":{},"body":{"injectables/AuthService.html":{}}}],["providers",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/ProductsModule.html":{},"modules/SalesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["quantity",{"_index":301,"title":{},"body":{"classes/CreateSaleDto.html":{},"classes/Sale.html":{}}}],["que",{"_index":379,"title":{},"body":{"classes/Sale.html":{}}}],["questions",{"_index":588,"title":{},"body":{"index.html":{}}}],["raíz",{"_index":98,"title":{},"body":{"modules/AppModule.html":{}}}],["read",{"_index":631,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{},"controllers/SalesController.html":{},"controllers/UsersController.html":{}}}],["ready",{"_index":544,"title":{},"body":{"index.html":{}}}],["real",{"_index":603,"title":{},"body":{"index.html":{}}}],["realiz",{"_index":380,"title":{},"body":{"classes/Sale.html":{}}}],["realiza",{"_index":155,"title":{},"body":{"injectables/AuthService.html":{}}}],["ref",{"_index":323,"title":{},"body":{"classes/Product.html":{},"classes/Sale.html":{}}}],["referencia",{"_index":335,"title":{},"body":{"classes/Product.html":{},"classes/Sale.html":{}}}],["reflect",{"_index":501,"title":{},"body":{"dependencies.html":{}}}],["registrar",{"_index":409,"title":{},"body":{"injectables/SalesService.html":{}}}],["relación",{"_index":336,"title":{},"body":{"classes/Product.html":{}}}],["repository",{"_index":523,"title":{},"body":{"index.html":{}}}],["required",{"_index":280,"title":{},"body":{"classes/Category.html":{},"classes/Product.html":{},"classes/Sale.html":{},"classes/User.html":{}}}],["requiring",{"_index":569,"title":{},"body":{"index.html":{}}}],["reset",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/ProductsModule.html":{},"modules/SalesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resources",{"_index":582,"title":{},"body":{"index.html":{}}}],["results",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateSaleDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/Product.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/Sale.html":{},"controllers/SalesController.html":{},"modules/SalesModule.html":{},"injectables/SalesService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["retorna",{"_index":161,"title":{},"body":{"injectables/AuthService.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/SalesController.html":{},"injectables/SalesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/SalesController.html":{},"injectables/SalesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["roles",{"_index":201,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["run",{"_index":529,"title":{},"body":{"index.html":{}}}],["runs",{"_index":551,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":504,"title":{},"body":{"dependencies.html":{}}}],["sale",{"_index":370,"title":{"classes/Sale.html":{}},"body":{"classes/Sale.html":{},"modules/SalesModule.html":{},"injectables/SalesService.html":{},"coverage.html":{}}}],["sale.dto",{"_index":394,"title":{},"body":{"controllers/SalesController.html":{},"injectables/SalesService.html":{}}}],["sale.dto.ts",{"_index":299,"title":{},"body":{"classes/CreateSaleDto.html":{},"coverage.html":{}}}],["sale.dto.ts:2",{"_index":307,"title":{},"body":{"classes/CreateSaleDto.html":{}}}],["sale.dto.ts:3",{"_index":304,"title":{},"body":{"classes/CreateSaleDto.html":{}}}],["sale.dto.ts:4",{"_index":305,"title":{},"body":{"classes/CreateSaleDto.html":{}}}],["sale.dto.ts:5",{"_index":306,"title":{},"body":{"classes/CreateSaleDto.html":{}}}],["sale.name",{"_index":403,"title":{},"body":{"modules/SalesModule.html":{}}}],["salemodel",{"_index":407,"title":{},"body":{"injectables/SalesService.html":{}}}],["sales",{"_index":388,"title":{},"body":{"controllers/SalesController.html":{}}}],["sales.controller",{"_index":401,"title":{},"body":{"modules/SalesModule.html":{}}}],["sales.service",{"_index":393,"title":{},"body":{"controllers/SalesController.html":{},"modules/SalesModule.html":{}}}],["sales/sales.module",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["saleschema",{"_index":384,"title":{},"body":{"classes/Sale.html":{},"modules/SalesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["salescontroller",{"_index":386,"title":{"controllers/SalesController.html":{}},"body":{"controllers/SalesController.html":{},"modules/SalesModule.html":{},"coverage.html":{}}}],["salesmodule",{"_index":43,"title":{"modules/SalesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SalesModule.html":{},"modules.html":{},"overview.html":{}}}],["salesservice",{"_index":392,"title":{"injectables/SalesService.html":{}},"body":{"controllers/SalesController.html":{},"modules/SalesModule.html":{},"injectables/SalesService.html":{},"coverage.html":{},"overview.html":{}}}],["scalable",{"_index":516,"title":{},"body":{"index.html":{}}}],["schema",{"_index":240,"title":{},"body":{"modules/CategoriesModule.html":{},"classes/Category.html":{},"classes/Product.html":{},"modules/ProductsModule.html":{},"classes/Sale.html":{},"modules/SalesModule.html":{},"classes/User.html":{},"modules/UsersModule.html":{}}}],["schemafactory",{"_index":273,"title":{},"body":{"classes/Category.html":{},"classes/Product.html":{},"classes/Sale.html":{},"classes/User.html":{}}}],["schemafactory.createforclass(category",{"_index":281,"title":{},"body":{"classes/Category.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(product",{"_index":338,"title":{},"body":{"classes/Product.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(sale",{"_index":385,"title":{},"body":{"classes/Sale.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(user",{"_index":426,"title":{},"body":{"classes/User.html":{},"miscellaneous/variables.html":{}}}],["schemas/category.schema",{"_index":237,"title":{},"body":{"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{}}}],["schemas/product.schema",{"_index":355,"title":{},"body":{"modules/ProductsModule.html":{},"injectables/ProductsService.html":{}}}],["schemas/sale.schema",{"_index":402,"title":{},"body":{"modules/SalesModule.html":{},"injectables/SalesService.html":{}}}],["schemas/user.schema",{"_index":443,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["secret",{"_index":141,"title":{},"body":{"modules/AuthModule.html":{}}}],["server",{"_index":517,"title":{},"body":{"index.html":{}}}],["servicio",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{}}}],["setup",{"_index":525,"title":{},"body":{"index.html":{}}}],["si",{"_index":163,"title":{},"body":{"injectables/AuthService.html":{}}}],["side",{"_index":518,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":144,"title":{},"body":{"modules/AuthModule.html":{}}}],["simple",{"_index":571,"title":{},"body":{"index.html":{}}}],["son",{"_index":164,"title":{},"body":{"injectables/AuthService.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateSaleDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/Product.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/Sale.html":{},"controllers/SalesController.html":{},"modules/SalesModule.html":{},"injectables/SalesService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["sponsors",{"_index":626,"title":{},"body":{"index.html":{}}}],["src/.../category.schema.ts",{"_index":651,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":508,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../product.schema.ts",{"_index":652,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../sale.schema.ts",{"_index":653,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.schema.ts",{"_index":654,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":48,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":102,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":103,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:10",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":132,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":148,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:18",{"_index":154,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:8",{"_index":153,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/dto/login.dto.ts",{"_index":315,"title":{},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["src/auth/dto/login.dto.ts:2",{"_index":316,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dto/login.dto.ts:3",{"_index":317,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/categories/categories.controller.ts",{"_index":210,"title":{},"body":{"controllers/CategoriesController.html":{},"coverage.html":{}}}],["src/categories/categories.controller.ts:10",{"_index":216,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["src/categories/categories.controller.ts:15",{"_index":219,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["src/categories/categories.module.ts",{"_index":233,"title":{},"body":{"modules/CategoriesModule.html":{}}}],["src/categories/categories.service.ts",{"_index":241,"title":{},"body":{"injectables/CategoriesService.html":{},"coverage.html":{}}}],["src/categories/categories.service.ts:17",{"_index":246,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["src/categories/categories.service.ts:26",{"_index":254,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["src/categories/categories.service.ts:8",{"_index":244,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["src/categories/dto/create",{"_index":282,"title":{},"body":{"classes/CreateCategoryDto.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":478,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/products/dto/create",{"_index":286,"title":{},"body":{"classes/CreateProductDto.html":{},"coverage.html":{}}}],["src/products/products.controller.ts",{"_index":340,"title":{},"body":{"controllers/ProductsController.html":{},"coverage.html":{}}}],["src/products/products.controller.ts:10",{"_index":343,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.controller.ts:15",{"_index":344,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.module.ts",{"_index":353,"title":{},"body":{"modules/ProductsModule.html":{}}}],["src/products/products.service.ts",{"_index":357,"title":{},"body":{"injectables/ProductsService.html":{},"coverage.html":{}}}],["src/products/products.service.ts:17",{"_index":361,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/products.service.ts:26",{"_index":363,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/products.service.ts:8",{"_index":359,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/sales/dto/create",{"_index":298,"title":{},"body":{"classes/CreateSaleDto.html":{},"coverage.html":{}}}],["src/sales/sales.controller.ts",{"_index":387,"title":{},"body":{"controllers/SalesController.html":{},"coverage.html":{}}}],["src/sales/sales.controller.ts:10",{"_index":390,"title":{},"body":{"controllers/SalesController.html":{}}}],["src/sales/sales.controller.ts:15",{"_index":391,"title":{},"body":{"controllers/SalesController.html":{}}}],["src/sales/sales.module.ts",{"_index":400,"title":{},"body":{"modules/SalesModule.html":{}}}],["src/sales/sales.service.ts",{"_index":404,"title":{},"body":{"injectables/SalesService.html":{},"coverage.html":{}}}],["src/sales/sales.service.ts:15",{"_index":408,"title":{},"body":{"injectables/SalesService.html":{}}}],["src/sales/sales.service.ts:24",{"_index":410,"title":{},"body":{"injectables/SalesService.html":{}}}],["src/sales/sales.service.ts:8",{"_index":406,"title":{},"body":{"injectables/SalesService.html":{}}}],["src/schemas/category.schema.ts",{"_index":267,"title":{},"body":{"classes/Category.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/schemas/category.schema.ts:9",{"_index":271,"title":{},"body":{"classes/Category.html":{}}}],["src/schemas/product.schema.ts",{"_index":319,"title":{},"body":{"classes/Product.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/schemas/product.schema.ts:13",{"_index":325,"title":{},"body":{"classes/Product.html":{}}}],["src/schemas/product.schema.ts:17",{"_index":327,"title":{},"body":{"classes/Product.html":{}}}],["src/schemas/product.schema.ts:21",{"_index":328,"title":{},"body":{"classes/Product.html":{}}}],["src/schemas/product.schema.ts:25",{"_index":324,"title":{},"body":{"classes/Product.html":{}}}],["src/schemas/product.schema.ts:9",{"_index":326,"title":{},"body":{"classes/Product.html":{}}}],["src/schemas/sale.schema.ts",{"_index":371,"title":{},"body":{"classes/Sale.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/schemas/sale.schema.ts:13",{"_index":375,"title":{},"body":{"classes/Sale.html":{}}}],["src/schemas/sale.schema.ts:17",{"_index":373,"title":{},"body":{"classes/Sale.html":{}}}],["src/schemas/sale.schema.ts:21",{"_index":374,"title":{},"body":{"classes/Sale.html":{}}}],["src/schemas/sale.schema.ts:9",{"_index":372,"title":{},"body":{"classes/Sale.html":{}}}],["src/schemas/user.schema.ts",{"_index":417,"title":{},"body":{"classes/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/schemas/user.schema.ts:13",{"_index":418,"title":{},"body":{"classes/User.html":{}}}],["src/schemas/user.schema.ts:17",{"_index":420,"title":{},"body":{"classes/User.html":{}}}],["src/schemas/user.schema.ts:21",{"_index":422,"title":{},"body":{"classes/User.html":{}}}],["src/schemas/user.schema.ts:9",{"_index":419,"title":{},"body":{"classes/User.html":{}}}],["src/users/dto/create",{"_index":309,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/users.controller.ts",{"_index":428,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:10",{"_index":431,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:15",{"_index":432,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module.ts",{"_index":441,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service.ts",{"_index":447,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:16",{"_index":452,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:29",{"_index":455,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:39",{"_index":454,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:9",{"_index":450,"title":{},"body":{"injectables/UsersService.html":{}}}],["start",{"_index":531,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":534,"title":{},"body":{"index.html":{}}}],["start:prodrun",{"_index":536,"title":{},"body":{"index.html":{}}}],["started",{"_index":510,"title":{"index.html":{}},"body":{}}],["starter",{"_index":522,"title":{},"body":{"index.html":{}}}],["statements",{"_index":470,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":611,"title":{},"body":{"index.html":{}}}],["steps",{"_index":548,"title":{},"body":{"index.html":{}}}],["stock",{"_index":290,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Product.html":{}}}],["straightforward",{"_index":567,"title":{},"body":{"index.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/Product.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/SalesController.html":{},"injectables/SalesService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["su",{"_index":255,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/ProductsService.html":{},"injectables/SalesService.html":{},"injectables/UsersService.html":{}}}],["sub",{"_index":196,"title":{},"body":{"injectables/AuthService.html":{}}}],["support",{"_index":589,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":643,"title":{},"body":{"modules.html":{}}}],["table",{"_index":487,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":486,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":549,"title":{},"body":{"index.html":{}}}],["test",{"_index":539,"title":{},"body":{"index.html":{}}}],["test:covdeployment",{"_index":542,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":541,"title":{},"body":{"index.html":{}}}],["tests",{"_index":537,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":625,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.login(logindto",{"_index":128,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.categoriesservice.create(createcategorydto",{"_index":228,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["this.categoriesservice.findone(id",{"_index":230,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["this.categorymodel(createcategorydto",{"_index":261,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.categorymodel.findbyid(id).exec",{"_index":263,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.jwtservice.sign(payload",{"_index":204,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.productmodel(createproductdto",{"_index":366,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.productmodel.findbyid(id).exec",{"_index":368,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.productsservice.create(createproductdto",{"_index":349,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.findone(id",{"_index":350,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.salemodel(createsaledto",{"_index":413,"title":{},"body":{"injectables/SalesService.html":{}}}],["this.salemodel.findbyid(id).exec",{"_index":415,"title":{},"body":{"injectables/SalesService.html":{}}}],["this.salesservice.create(createsaledto",{"_index":396,"title":{},"body":{"controllers/SalesController.html":{}}}],["this.salesservice.findone(id",{"_index":397,"title":{},"body":{"controllers/SalesController.html":{}}}],["this.usermodel",{"_index":461,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findbyid(id).exec",{"_index":463,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findone",{"_index":465,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersservice.create(createuserdto",{"_index":436,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findbyemail(logindto.email",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.findone(id",{"_index":437,"title":{},"body":{"controllers/UsersController.html":{}}}],["throw",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/CategoriesService.html":{},"injectables/ProductsService.html":{},"injectables/SalesService.html":{},"injectables/UsersService.html":{}}}],["time",{"_index":604,"title":{},"body":{"index.html":{}}}],["timestamps",{"_index":276,"title":{},"body":{"classes/Category.html":{},"classes/Product.html":{},"classes/Sale.html":{},"classes/User.html":{}}}],["token",{"_index":195,"title":{},"body":{"injectables/AuthService.html":{}}}],["total",{"_index":302,"title":{},"body":{"classes/CreateSaleDto.html":{},"classes/Sale.html":{}}}],["touch",{"_index":633,"title":{},"body":{"index.html":{}}}],["true",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"classes/Category.html":{},"classes/Product.html":{},"classes/Sale.html":{},"classes/User.html":{}}}],["twitter",{"_index":639,"title":{},"body":{"index.html":{}}}],["type",{"_index":118,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateSaleDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/Product.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/Sale.html":{},"controllers/SalesController.html":{},"injectables/SalesService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["types",{"_index":329,"title":{},"body":{"classes/Product.html":{},"classes/Sale.html":{}}}],["types.objectid",{"_index":320,"title":{},"body":{"classes/Product.html":{},"classes/Sale.html":{}}}],["typescript",{"_index":521,"title":{},"body":{"index.html":{}}}],["un",{"_index":156,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["una",{"_index":248,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/SalesService.html":{}}}],["unauthorizedexception",{"_index":166,"title":{},"body":{"injectables/AuthService.html":{}}}],["unauthorizedexception('credenciales",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{}}}],["undefined",{"_index":322,"title":{},"body":{"classes/Product.html":{},"classes/Sale.html":{},"classes/User.html":{}}}],["unique",{"_index":270,"title":{},"body":{"classes/Category.html":{},"classes/User.html":{}}}],["unit",{"_index":538,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":120,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["unlicensed",{"_index":650,"title":{},"body":{"properties.html":{}}}],["updates",{"_index":613,"title":{},"body":{"index.html":{}}}],["usando",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["usefactory",{"_index":140,"title":{},"body":{"modules/AuthModule.html":{}}}],["user",{"_index":178,"title":{"classes/User.html":{}},"body":{"injectables/AuthService.html":{},"classes/Sale.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["user._id",{"_index":197,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.dto",{"_index":434,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":310,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:2",{"_index":312,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:3",{"_index":314,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:4",{"_index":313,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.email",{"_index":200,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.name",{"_index":208,"title":{},"body":{"injectables/AuthService.html":{},"modules/UsersModule.html":{}}}],["user.password",{"_index":192,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.roles",{"_index":202,"title":{},"body":{"injectables/AuthService.html":{}}}],["userid",{"_index":303,"title":{},"body":{"classes/CreateSaleDto.html":{},"classes/Sale.html":{}}}],["usermodel",{"_index":451,"title":{},"body":{"injectables/UsersService.html":{}}}],["users",{"_index":429,"title":{},"body":{"controllers/UsersController.html":{}}}],["users.controller",{"_index":442,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":433,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/users.module",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["users/users.service",{"_index":167,"title":{},"body":{"injectables/AuthService.html":{}}}],["userschema",{"_index":425,"title":{},"body":{"classes/User.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userscontroller",{"_index":427,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":44,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":151,"title":{"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["using",{"_index":605,"title":{},"body":{"index.html":{}}}],["uso",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["usuario",{"_index":157,"title":{},"body":{"injectables/AuthService.html":{},"classes/Sale.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["usuarios",{"_index":171,"title":{},"body":{"injectables/AuthService.html":{}}}],["value",{"_index":655,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{}}}],["variables",{"_index":68,"title":{"miscellaneous/variables.html":{}},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["vendido",{"_index":378,"title":{},"body":{"classes/Sale.html":{}}}],["vendidos",{"_index":383,"title":{},"body":{"classes/Sale.html":{}}}],["venta",{"_index":376,"title":{},"body":{"classes/Sale.html":{},"injectables/SalesService.html":{}}}],["verifica",{"_index":158,"title":{},"body":{"injectables/AuthService.html":{}}}],["verificar",{"_index":174,"title":{},"body":{"injectables/AuthService.html":{}}}],["version",{"_index":648,"title":{},"body":{"properties.html":{}}}],["video",{"_index":597,"title":{},"body":{"index.html":{}}}],["visit",{"_index":586,"title":{},"body":{"index.html":{}}}],["visualize",{"_index":600,"title":{},"body":{"index.html":{}}}],["válidas",{"_index":165,"title":{},"body":{"injectables/AuthService.html":{}}}],["watch",{"_index":532,"title":{},"body":{"index.html":{}}}],["website",{"_index":637,"title":{},"body":{"index.html":{}}}],["working",{"_index":585,"title":{},"body":{"index.html":{}}}],["world",{"_index":105,"title":{},"body":{"injectables/AppService.html":{}}}],["x",{"_index":615,"title":{},"body":{"index.html":{}}}],["y",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{}}}],["you'd",{"_index":629,"title":{},"body":{"index.html":{}}}],["you're",{"_index":543,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/ProductsModule.html":{},"modules/SalesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCategoriesModule\n\nCategoriesModule\n\nAppModule -->\n\nCategoriesModule->AppModule\n\n\n\n\n\nProductsModule\n\nProductsModule\n\nAppModule -->\n\nProductsModule->AppModule\n\n\n\n\n\nSalesModule\n\nSalesModule\n\nAppModule -->\n\nSalesModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CategoriesModule\n                        \n                        \n                            ProductsModule\n                        \n                        \n                            SalesModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // Módulo principal de la aplicación NestJS. Importa y configura los módulos globales y de dominio.\nimport { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { ConfigModule } from '@nestjs/config'; // Importa ConfigModule para variables de entorno\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { AuthModule } from './auth/auth.module';\nimport { UsersModule } from './users/users.module';\nimport { ProductsModule } from './products/products.module';\nimport { SalesModule } from './sales/sales.module';\nimport { CategoriesModule } from './categories/categories.module';\n\n@Module({\n  imports: [\n    // Habilita el uso de variables de entorno (.env) de forma global\n    ConfigModule.forRoot({ isGlobal: true }),\n    // Conexión a MongoDB usando la variable de entorno DATABASE_URL\n    MongooseModule.forRoot(\n      (() => {\n        const dbUrl = process.env.DATABASE_URL;\n        if (!dbUrl) {\n          throw new Error('DATABASE_URL is not defined');\n        }\n        return dbUrl;\n      })(),\n    ),\n    // Módulos de dominio\n    AuthModule,\n    UsersModule,\n    ProductsModule,\n    SalesModule,\n    CategoriesModule,\n  ],\n  controllers: [AppController], // Controlador raíz\n  providers: [AppService], // Servicio raíz\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(loginDto: LoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                loginDto\n                                            \n                                                            LoginDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, Body } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { LoginDto } from './dto/login.dto';\n\n@Controller('auth')\nexport class AuthController {\n  constructor(private readonly authService: AuthService) {}\n\n  @Post('login')\n  async login(@Body() loginDto: LoginDto) {\n    return this.authService.login(loginDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\nimport { UsersModule } from '../users/users.module';\nimport { JwtModule } from '@nestjs/jwt';\nimport { ConfigModule, ConfigService } from '@nestjs/config'; // 👈 Agrega esto\n\n@Module({\n  imports: [\n    UsersModule,\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => ({\n        secret: configService.get('JWT_SECRET', 'defaultSecret'),\n        signOptions: { expiresIn: '1d' },\n      }),\n      inject: [ConfigService],\n    }),\n  ],\n  controllers: [AuthController],\n  providers: [AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(loginDto: LoginDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:18\n                        \n                    \n\n\n            \n                \n                        Realiza el login de un usuario.\nVerifica las credenciales y retorna un JWT si son válidas.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                loginDto\n                                            \n                                                            LoginDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { UsersService } from '../users/users.service';\nimport { LoginDto } from './dto/login.dto';\nimport * as bcrypt from 'bcryptjs';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private readonly usersService: UsersService, // Servicio de usuarios para consultar credenciales\n    private readonly jwtService: JwtService, // Servicio para generar y verificar JWT\n  ) {}\n\n  /**\n   * Realiza el login de un usuario.\n   * Verifica las credenciales y retorna un JWT si son válidas.\n   */\n  async login(loginDto: LoginDto) {\n    // Busca el usuario por email\n    const user = await this.usersService.findByEmail(loginDto.email);\n\n    if (!user) {\n      throw new UnauthorizedException('Credenciales inválidas');\n    }\n\n    // Compara la contraseña proporcionada con el hash almacenado\n    const isPasswordValid = await bcrypt.compare(\n      loginDto.password,\n      user.password,\n    );\n\n    if (!isPasswordValid) {\n      throw new UnauthorizedException('Credenciales inválidas');\n    }\n\n    // Payload del token JWT\n    const payload = {\n      sub: user._id, // Para MongoDB es _id\n      email: user.email,\n      roles: user.roles || [],\n    };\n\n    // Genera el token JWT\n    const token = this.jwtService.sign(payload);\n\n    // Retorna el token y los datos básicos del usuario\n    return {\n      access_token: token,\n      user: {\n        _id: user._id,\n        email: user.email,\n        name: user.name,\n        roles: user.roles,\n      },\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CategoriesController.html":{"url":"controllers/CategoriesController.html","title":"controller - CategoriesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CategoriesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories/categories.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                categories\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createCategoryDto: CreateCategoryDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/categories/categories.controller.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createCategoryDto\n                                            \n                                                            CreateCategoryDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/categories/categories.controller.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Param } from '@nestjs/common';\nimport { CategoriesService } from './categories.service';\nimport { CreateCategoryDto } from './dto/create-category.dto';\n\n@Controller('categories')\nexport class CategoriesController {\n  constructor(private readonly categoriesService: CategoriesService) {}\n\n  @Post()\n  create(@Body() createCategoryDto: CreateCategoryDto) {\n    return this.categoriesService.create(createCategoryDto);\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.categoriesService.findOne(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CategoriesModule.html":{"url":"modules/CategoriesModule.html","title":"module - CategoriesModule","body":"\n                   \n\n\n\n\n    Modules\n    CategoriesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CategoriesModule\n\n\n\ncluster_CategoriesModule_providers\n\n\n\n\nCategoriesService\n\nCategoriesService\n\n\n\nCategoriesModule\n\nCategoriesModule\n\nCategoriesModule -->\n\nCategoriesService->CategoriesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/categories/categories.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CategoriesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CategoriesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CategoriesService } from './categories.service';\nimport { CategoriesController } from './categories.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Category, CategorySchema } from '../schemas/category.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      { name: Category.name, schema: CategorySchema },\n    ]),\n  ],\n  controllers: [CategoriesController],\n  providers: [CategoriesService],\n})\nexport class CategoriesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CategoriesService.html":{"url":"injectables/CategoriesService.html","title":"injectable - CategoriesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CategoriesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories/categories.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(categoryModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/categories/categories.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        categoryModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createCategoryDto: CreateCategoryDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/categories/categories.service.ts:17\n                        \n                    \n\n\n            \n                \n                        Crea una nueva categoría.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                createCategoryDto\n                                            \n                                                            CreateCategoryDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Datos de la categoría a crear\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/categories/categories.service.ts:26\n                        \n                    \n\n\n            \n                \n                        Busca una categoría por su ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID de la categoría\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { CreateCategoryDto } from './dto/create-category.dto';\nimport { Category } from '../schemas/category.schema';\n\n@Injectable()\nexport class CategoriesService {\n  constructor(\n    @InjectModel(Category.name) private categoryModel: Model,\n  ) {}\n\n  /**\n   * Crea una nueva categoría.\n   * @param createCategoryDto Datos de la categoría a crear\n   */\n  async create(createCategoryDto: CreateCategoryDto): Promise {\n    const createdCategory = new this.categoryModel(createCategoryDto);\n    return createdCategory.save();\n  }\n\n  /**\n   * Busca una categoría por su ID.\n   * @param id ID de la categoría\n   */\n  async findOne(id: string): Promise {\n    const category = await this.categoryModel.findById(id).exec();\n    if (!category) throw new NotFoundException('Category not found');\n    return category;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Category.html":{"url":"classes/Category.html","title":"class - Category","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Category\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/schemas/category.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/category.schema.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\n// Esquema de categoría para MongoDB\n@Schema({ timestamps: true })\nexport class Category extends Document {\n  // Nombre único de la categoría\n  @Prop({ required: true, unique: true })\n  name: string;\n}\n\nexport const CategorySchema = SchemaFactory.createForClass(Category);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCategoryDto.html":{"url":"classes/CreateCategoryDto.html","title":"class - CreateCategoryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCategoryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories/dto/create-category.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/categories/dto/create-category.dto.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateCategoryDto {\n  name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProductDto.html":{"url":"classes/CreateProductDto.html","title":"class - CreateProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/dto/create-product.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                categoryId\n                            \n                            \n                                    Optional\n                                description\n                            \n                            \n                                name\n                            \n                            \n                                price\n                            \n                            \n                                stock\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        categoryId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/products/dto/create-product.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/products/dto/create-product.dto.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/products/dto/create-product.dto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/products/dto/create-product.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stock\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/products/dto/create-product.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateProductDto {\n  name: string;\n  description?: string;\n  price: number;\n  stock: number;\n  categoryId: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSaleDto.html":{"url":"classes/CreateSaleDto.html","title":"class - CreateSaleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSaleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/sales/dto/create-sale.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                productId\n                            \n                            \n                                quantity\n                            \n                            \n                                total\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        productId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/sales/dto/create-sale.dto.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/sales/dto/create-sale.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/sales/dto/create-sale.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/sales/dto/create-sale.dto.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateSaleDto {\n  userId: number;\n  productId: number;\n  quantity: number;\n  total: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateUserDto {\n  email: string;\n  password: string;\n  name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class LoginDto {\n  email: string;\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Product.html":{"url":"classes/Product.html","title":"class - Product","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Product\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/schemas/product.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                category\n                            \n                            \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                price\n                            \n                            \n                                    \n                                stock\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: 'Category', required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/product.schema.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/product.schema.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/product.schema.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/product.schema.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        stock\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/product.schema.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document, Types } from 'mongoose';\n\n// Esquema de producto para MongoDB\n@Schema({ timestamps: true })\nexport class Product extends Document {\n  // Nombre del producto\n  @Prop({ required: true })\n  name: string;\n\n  // Descripción opcional del producto\n  @Prop()\n  description?: string;\n\n  // Precio del producto\n  @Prop({ required: true })\n  price: number;\n\n  // Stock disponible\n  @Prop({ required: true })\n  stock: number;\n\n  // Referencia a la categoría (relación)\n  @Prop({ type: Types.ObjectId, ref: 'Category', required: true })\n  category: Types.ObjectId;\n}\n\nexport const ProductSchema = SchemaFactory.createForClass(Product);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProductsController.html":{"url":"controllers/ProductsController.html","title":"controller - ProductsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProductsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/products.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                products\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createProductDto: CreateProductDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/products/products.controller.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createProductDto\n                                            \n                                                            CreateProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/products/products.controller.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Param } from '@nestjs/common';\nimport { ProductsService } from './products.service';\nimport { CreateProductDto } from './dto/create-product.dto';\n\n@Controller('products')\nexport class ProductsController {\n  constructor(private readonly productsService: ProductsService) {}\n\n  @Post()\n  create(@Body() createProductDto: CreateProductDto) {\n    return this.productsService.create(createProductDto);\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.productsService.findOne(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProductsModule.html":{"url":"modules/ProductsModule.html","title":"module - ProductsModule","body":"\n                   \n\n\n\n\n    Modules\n    ProductsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProductsModule\n\n\n\ncluster_ProductsModule_providers\n\n\n\n\nProductsService\n\nProductsService\n\n\n\nProductsModule\n\nProductsModule\n\nProductsModule -->\n\nProductsService->ProductsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/products/products.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProductsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProductsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ProductsService } from './products.service';\nimport { ProductsController } from './products.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Product, ProductSchema } from '../schemas/product.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: Product.name, schema: ProductSchema }]),\n  ],\n  controllers: [ProductsController],\n  providers: [ProductsService],\n})\nexport class ProductsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductsService.html":{"url":"injectables/ProductsService.html","title":"injectable - ProductsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/products.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(productModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/products/products.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        productModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createProductDto: CreateProductDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/products/products.service.ts:17\n                        \n                    \n\n\n            \n                \n                        Crea un nuevo producto.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                createProductDto\n                                            \n                                                            CreateProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Datos del producto a crear\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/products/products.service.ts:26\n                        \n                    \n\n\n            \n                \n                        Busca un producto por su ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID del producto\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { CreateProductDto } from './dto/create-product.dto';\nimport { Product } from '../schemas/product.schema';\n\n@Injectable()\nexport class ProductsService {\n  constructor(\n    @InjectModel(Product.name) private productModel: Model,\n  ) {}\n\n  /**\n   * Crea un nuevo producto.\n   * @param createProductDto Datos del producto a crear\n   */\n  async create(createProductDto: CreateProductDto): Promise {\n    const createdProduct = new this.productModel(createProductDto);\n    return createdProduct.save();\n  }\n\n  /**\n   * Busca un producto por su ID.\n   * @param id ID del producto\n   */\n  async findOne(id: string): Promise {\n    const product = await this.productModel.findById(id).exec();\n    if (!product) throw new NotFoundException('Product not found');\n    return product;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Sale.html":{"url":"classes/Sale.html","title":"class - Sale","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Sale\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/schemas/sale.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                productId\n                            \n                            \n                                    \n                                quantity\n                            \n                            \n                                    \n                                total\n                            \n                            \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        productId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: 'Product', required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/sale.schema.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/sale.schema.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/sale.schema.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: 'User', required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/sale.schema.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document, Types } from 'mongoose';\n\n// Esquema de venta para MongoDB\n@Schema({ timestamps: true })\nexport class Sale extends Document {\n  // Referencia al producto vendido\n  @Prop({ type: Types.ObjectId, ref: 'Product', required: true })\n  productId: Types.ObjectId;\n\n  // Referencia al usuario que realizó la venta\n  @Prop({ type: Types.ObjectId, ref: 'User', required: true })\n  userId: Types.ObjectId;\n\n  // Cantidad de productos vendidos\n  @Prop({ required: true })\n  quantity: number;\n\n  // Total de la venta\n  @Prop({ required: true })\n  total: number;\n}\n\nexport const SaleSchema = SchemaFactory.createForClass(Sale);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SalesController.html":{"url":"controllers/SalesController.html","title":"controller - SalesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SalesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/sales/sales.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                sales\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createSaleDto: CreateSaleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/sales/sales.controller.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createSaleDto\n                                            \n                                                            CreateSaleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/sales/sales.controller.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Param } from '@nestjs/common';\nimport { SalesService } from './sales.service';\nimport { CreateSaleDto } from './dto/create-sale.dto';\n\n@Controller('sales')\nexport class SalesController {\n  constructor(private readonly salesService: SalesService) {}\n\n  @Post()\n  create(@Body() createSaleDto: CreateSaleDto) {\n    return this.salesService.create(createSaleDto);\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.salesService.findOne(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SalesModule.html":{"url":"modules/SalesModule.html","title":"module - SalesModule","body":"\n                   \n\n\n\n\n    Modules\n    SalesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SalesModule\n\n\n\ncluster_SalesModule_providers\n\n\n\n\nSalesService\n\nSalesService\n\n\n\nSalesModule\n\nSalesModule\n\nSalesModule -->\n\nSalesService->SalesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/sales/sales.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SalesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SalesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SalesService } from './sales.service';\nimport { SalesController } from './sales.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Sale, SaleSchema } from '../schemas/sale.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: Sale.name, schema: SaleSchema }]),\n  ],\n  controllers: [SalesController],\n  providers: [SalesService],\n})\nexport class SalesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SalesService.html":{"url":"injectables/SalesService.html","title":"injectable - SalesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SalesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/sales/sales.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(saleModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/sales/sales.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        saleModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createSaleDto: CreateSaleDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/sales/sales.service.ts:15\n                        \n                    \n\n\n            \n                \n                        Crea una nueva venta.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                createSaleDto\n                                            \n                                                            CreateSaleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Datos de la venta a registrar\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/sales/sales.service.ts:24\n                        \n                    \n\n\n            \n                \n                        Busca una venta por su ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID de la venta\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { CreateSaleDto } from './dto/create-sale.dto';\nimport { Sale } from '../schemas/sale.schema';\n\n@Injectable()\nexport class SalesService {\n  constructor(@InjectModel(Sale.name) private saleModel: Model) {}\n\n  /**\n   * Crea una nueva venta.\n   * @param createSaleDto Datos de la venta a registrar\n   */\n  async create(createSaleDto: CreateSaleDto): Promise {\n    const createdSale = new this.saleModel(createSaleDto);\n    return createdSale.save();\n  }\n\n  /**\n   * Busca una venta por su ID.\n   * @param id ID de la venta\n   */\n  async findOne(id: string): Promise {\n    const sale = await this.saleModel.findById(id).exec();\n    if (!sale) throw new NotFoundException('Sale not found');\n    return sale;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/schemas/user.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                roles\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/user.schema.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/user.schema.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/user.schema.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/user.schema.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\n// Esquema de usuario para MongoDB\n@Schema({ timestamps: true })\nexport class User extends Document {\n  // Nombre del usuario\n  @Prop({ required: true })\n  name: string;\n\n  // Email único del usuario\n  @Prop({ required: true, unique: true })\n  email: string;\n\n  // Contraseña hasheada\n  @Prop({ required: true })\n  password: string;\n\n  // Roles del usuario (por defecto: ['user'])\n  @Prop({ type: [String], default: ['user'] })\n  roles: string[];\n}\n\nexport const UserSchema = SchemaFactory.createForClass(User);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Param } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { CreateUserDto } from './dto/create-user.dto';\n\n@Controller('users')\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) {}\n\n  @Post()\n  create(@Body() createUserDto: CreateUserDto) {\n    return this.usersService.create(createUserDto);\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.usersService.findOne(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\ncluster_UsersModule_exports\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { UsersController } from './users.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { User, UserSchema } from '../schemas/user.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: User.name, schema: UserSchema }]),\n  ],\n  controllers: [UsersController],\n  providers: [UsersService],\n  exports: [UsersService], // 👈 ESTA LÍNEA ES CLAVE\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findByEmail\n                            \n                            \n                                    Async\n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createUserDto: CreateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:16\n                        \n                    \n\n\n            \n                \n                        Crea un nuevo usuario con la contraseña hasheada.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Datos del usuario a crear\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:39\n                        \n                    \n\n\n            \n                \n                        Busca un usuario por su email.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Email del usuario\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:29\n                        \n                    \n\n\n            \n                \n                        Busca un usuario por su ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID del usuario\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { User } from '../schemas/user.schema';\nimport * as bcrypt from 'bcryptjs';\n\n@Injectable()\nexport class UsersService {\n  constructor(@InjectModel(User.name) private userModel: Model) {}\n\n  /**\n   * Crea un nuevo usuario con la contraseña hasheada.\n   * @param createUserDto Datos del usuario a crear\n   */\n  async create(createUserDto: CreateUserDto): Promise {\n    const hashedPassword = await bcrypt.hash(createUserDto.password, 10);\n    const createdUser = new this.userModel({\n      ...createUserDto,\n      password: hashedPassword,\n    });\n    return createdUser.save();\n  }\n\n  /**\n   * Busca un usuario por su ID.\n   * @param id ID del usuario\n   */\n  async findOne(id: string): Promise {\n    const user = await this.userModel.findById(id).exec();\n    if (!user) throw new NotFoundException('User not found');\n    return user;\n  }\n\n  /**\n   * Busca un usuario por su email.\n   * @param email Email del usuario\n   */\n  async findByEmail(email: string): Promise {\n    return this.userModel.findOne({ email }).exec();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/auth/dto/login.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/categories/categories.controller.ts\n            \n            controller\n            CategoriesController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/categories/categories.service.ts\n            \n            injectable\n            CategoriesService\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/categories/dto/create-category.dto.ts\n            \n            class\n            CreateCategoryDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/products/dto/create-product.dto.ts\n            \n            class\n            CreateProductDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/products/products.controller.ts\n            \n            controller\n            ProductsController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/products/products.service.ts\n            \n            injectable\n            ProductsService\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/sales/dto/create-sale.dto.ts\n            \n            class\n            CreateSaleDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/sales/sales.controller.ts\n            \n            controller\n            SalesController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/sales/sales.service.ts\n            \n            injectable\n            SalesService\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/schemas/category.schema.ts\n            \n            class\n            Category\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/schemas/category.schema.ts\n            \n            variable\n            CategorySchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/schemas/product.schema.ts\n            \n            class\n            Product\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                        src/schemas/product.schema.ts\n            \n            variable\n            ProductSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/schemas/sale.schema.ts\n            \n            class\n            Sale\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                        src/schemas/sale.schema.ts\n            \n            variable\n            SaleSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/schemas/user.schema.ts\n            \n            class\n            User\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                        src/schemas/user.schema.ts\n            \n            variable\n            UserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                60 %\n                (3/5)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^11.0.1\n        \n            @nestjs/config : ^4.0.2\n        \n            @nestjs/core : ^11.0.1\n        \n            @nestjs/jwt : ^11.0.0\n        \n            @nestjs/mongoose : ^11.0.3\n        \n            @nestjs/platform-express : ^11.0.1\n        \n            @prisma/client : ^5.0.0\n        \n            bcryptjs : ^3.0.2\n        \n            mongoose : ^8.16.4\n        \n            prisma : ^5.0.0\n        \n            reflect-metadata : ^0.2.2\n        \n            rxjs : ^7.8.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nProject setup\nExample :$ npm installCompile and run the project\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodRun tests\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covDeployment\nWhen you're ready to deploy your NestJS application to production, there are some key steps you can take to ensure it runs as efficiently as possible. Check out the deployment documentation for more information.\nIf you are looking for a cloud-based platform to deploy your NestJS application, check out Mau, our official platform for deploying NestJS applications on AWS. Mau makes deployment straightforward and fast, requiring just a few simple steps:\nExample :$ npm install -g @nestjs/mau\n$ mau deployWith Mau, you can deploy your application in just a few clicks, allowing you to focus on building features rather than managing infrastructure.\nResources\nCheck out a few resources that may come in handy when working with NestJS:\n\nVisit the NestJS Documentation to learn more about the framework.\nFor questions and support, please visit our Discord channel.\nTo dive deeper and get more hands-on experience, check out our official video courses.\nDeploy your application to AWS with the help of NestJS Mau in just a few clicks.\nVisualize your application graph and interact with the NestJS application in real-time using NestJS Devtools.\nNeed help with your project (part-time to full-time)? Check out our official enterprise support.\nTo stay in the loop and get updates, follow us on X and LinkedIn.\nLooking for a job, or have a job to offer? Check out our official Jobs board.\n\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CategoriesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProductsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SalesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CategoriesModule\n\n\n\ncluster_CategoriesModule_providers\n\n\n\ncluster_ProductsModule\n\n\n\ncluster_ProductsModule_providers\n\n\n\ncluster_SalesModule\n\n\n\ncluster_SalesModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCategoriesModule\n\nCategoriesModule\n\nAppModule -->\n\nCategoriesModule->AppModule\n\n\n\n\n\nProductsModule\n\nProductsModule\n\nAppModule -->\n\nProductsModule->AppModule\n\n\n\n\n\nSalesModule\n\nSalesModule\n\nAppModule -->\n\nSalesModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nCategoriesService\n\nCategoriesService\n\nCategoriesModule -->\n\nCategoriesService->CategoriesModule\n\n\n\n\n\nProductsService\n\nProductsService\n\nProductsModule -->\n\nProductsService->ProductsModule\n\n\n\n\n\nSalesService\n\nSalesService\n\nSalesModule -->\n\nSalesService->SalesModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    9 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CategorySchema   (src/.../category.schema.ts)\n                        \n                        \n                            ProductSchema   (src/.../product.schema.ts)\n                        \n                        \n                            SaleSchema   (src/.../sale.schema.ts)\n                        \n                        \n                            UserSchema   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/schemas/category.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CategorySchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Category)\n                    \n                \n\n\n        \n    \n\n    src/schemas/product.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ProductSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Product)\n                    \n                \n\n\n        \n    \n\n    src/schemas/sale.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SaleSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Sale)\n                    \n                \n\n\n        \n    \n\n    src/schemas/user.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UserSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(User)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
